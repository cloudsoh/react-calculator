{"version":3,"sources":["Calculator/Screen.js","Calculator/Button.js","Calculator/Keyboard.js","Calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Screen","props","copyResult","bind","copyText","this","refs","screen","select","setSelectionRange","document","execCommand","readOnly","ref","className","value","result","onClick","React","Component","Button","children","Keyboard","interpretKey","key","inputNumber","addDot","addAction","add","minus","multiply","divide","clearCalculator","backSpace","setNewNumber","setOldNumber","setState","action","newNumber","toString","slice","state","Number","parseFloat","toFixed","oldNumber","addEventListener","removeEventListener","num","number","layout","symbol","fn","map","row","Calculator","displayNumber","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c1906df6.chunk.js","sourcesContent":["import React from 'react'\n\nexport class Screen extends React.Component {\n    constructor(props) {\n        super(props)\n        this.copyResult = this.copyResult.bind(this)\n    }\n    copyResult() {\n        const copyText = this.refs.screen\n\n        copyText.select();\n        copyText.setSelectionRange(0, 99999)\n\n        document.execCommand('copy')\n\n    }\n    render() {\n        return (\n            <input \n            readOnly\n            ref=\"screen\" \n            className=\"Calculator-screen\" \n            value={this.props.result}\n            onClick={this.copyResult}>   \n            </input>\n        )\n    }\n}\n","import React from 'react'\n\nexport class Button extends React.Component {\n    render() {\n        return (\n            <button className=\"Calculator-button\" onClick={this.props.onClick}>\n                {this.props.children}\n            </button>\n        )\n    }\n}\n","import React from 'react'\nimport { Button } from './Button'\n\nexport class Keyboard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.inputNumber = this.inputNumber.bind(this)\n        this.state = {\n            action: null,\n            addDot: false\n        }\n    }\n    interpretKey = ({ key }) => {\n        switch (key) {\n            case '1': \n            case '2': \n            case '3': \n            case '4': \n            case '5': \n            case '6': \n            case '7': \n            case '8': \n            case '9': \n            case '0': \n                this.inputNumber(key)\n                break\n            case '.':\n                this.addDot()\n                break\n            case '+':\n                this.addAction(this.add)\n                break\n            case '-':\n                this.addAction(this.minus)\n                break\n            case '*':\n                this.addAction(this.multiply)\n                break\n            case '/':\n                this.addAction(this.divide)\n                break\n            case 'c':\n            case 'Escape':\n                this.clearCalculator()\n                break\n            case 'Backspace':\n                this.backSpace()\n                break\n            case 'Enter':\n                this.addAction(null)\n                break\n            default:\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.interpretKey) \n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.interpretKey)\n    }\n    inputNumber(num) {\n        let number = 0;\n        const { newNumber } = this.props\n\n        if (this.state.addDot) {\n            num = '.' + num\n            this.setState({\n                addDot: false\n            })\n        }\n        if (newNumber === null) {\n            number = num;\n        } else {\n            number = newNumber + num.toString() \n        }\n        this.props.setNewNumber(Number.parseFloat(number))\n    }\n    clearCalculator = () => {\n        this.props.setNewNumber(null)\n        this.props.setOldNumber(0)\n        this.setState({\n            action: null\n        })\n    }\n    backSpace = () => {\n        if (this.props.newNumber == null) {\n            return;\n        }\n        const newNumber = this.props.newNumber.toString().slice(0, -1)\n        this.props.setNewNumber(newNumber === '' ? null : newNumber)\n    }\n    addAction = (action) => {\n        if (this.props.newNumber !== null) {\n            let result = this.props.newNumber\n            if (this.state.action) {\n                result = this.state.action();\n            }\n            this.props.setNewNumber(null)\n            this.props.setOldNumber(Number.parseFloat(Number.parseFloat(result).toFixed(10))) \n        }\n        this.setState({\n            action\n        })\n    }\n    addDot = () => {\n        this.setState({\n            addDot: true\n        })\n    }\n    divide = () => {\n        return this.props.oldNumber / this.props.newNumber\n    }\n    multiply = () => {\n        return this.props.oldNumber * this.props.newNumber\n    }\n    minus = () => {\n        return this.props.oldNumber - this.props.newNumber\n    }\n    add = () => {\n        return this.props.oldNumber + this.props.newNumber\n    }\n    render() {\n        const layout = [\n            [\n                {\n                    symbol: 7,\n                    fn: () => this.inputNumber(7)\n                },\n                {\n                    symbol: 8,\n                    fn: () => this.inputNumber(8)\n                },\n                {\n                    symbol: 9,\n                    fn: () => this.inputNumber(9)\n                },\n                {\n                    symbol: '÷',\n                    fn: () => this.addAction(this.divide)\n                },\n                {\n                    symbol: 4,\n                    fn: () => this.inputNumber(4)\n                },\n                {\n                    symbol: 5,\n                    fn: () => this.inputNumber(5)\n                },\n                {\n                    symbol: 6,\n                    fn: () => this.inputNumber(6)\n                },\n                {\n                    symbol: 'x',\n                    fn: () => this.addAction(this.multiply)\n                },\n                {\n                    symbol: 1,\n                    fn: () => this.inputNumber(1)\n                },\n                {\n                    symbol: 2,\n                    fn: () => this.inputNumber(2)\n                },\n                {\n                    symbol: 3,\n                    fn: () => this.inputNumber(3)\n                },\n                {\n                    symbol: '-',\n                    fn: () => this.addAction(this.minus)\n                },\n                {\n                    symbol: 'c',\n                    fn: this.clearCalculator\n                },\n                {\n                    symbol: 0,\n                    fn: () => this.inputNumber(0)\n                },\n                {\n                    symbol: '.',\n                    fn: this.addDot\n                },\n                {\n                    symbol: '+',\n                    fn: () => this.addAction(this.add)\n                },\n            ]\n        ]\n        return (\n            <div className=\"Calculator-keyboard\">\n                {\n                    layout.map((row) => \n                        row.map(({ fn, symbol }) => \n                            <Button key={symbol} onClick={fn}>{symbol}</Button>\n                        )\n                    )\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Screen } from './Screen'\nimport { Keyboard } from './Keyboard'\n\nexport class Calculator extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newNumber: null,\n            oldNumber: 0\n        }\n        this.setNewNumber = this.setNewNumber.bind(this)\n        this.setOldNumber = this.setOldNumber.bind(this)\n    }\n    setNewNumber(newNumber) {\n        this.setState({ newNumber })\n    }\n    setOldNumber(oldNumber) {\n        this.setState({ oldNumber })\n    }\n    render() {\n        const { oldNumber, newNumber } = this.state\n        const displayNumber = newNumber === null ? oldNumber : newNumber\n        return (\n            <div className=\"Calculator\">\n                <Screen result={displayNumber}></Screen>\n                <Keyboard \n                    newNumber={this.state.newNumber}\n                    oldNumber={this.state.oldNumber}\n                    setNewNumber={this.setNewNumber}\n                    setOldNumber={this.setOldNumber}\n                    >\n                    </Keyboard>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Calculator } from './Calculator/Calculator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-heading\">\n          Calculator\n        </h1>\n        <Calculator></Calculator>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}